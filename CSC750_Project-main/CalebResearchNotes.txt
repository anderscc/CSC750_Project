https://www.youtube.com/watch?v=8NrNX_jCkjw&ab_channel=PrototypeProject -- Long video, 29 minutes and 49 seconds.
Algorithm accounts for number of conflicts, generates multiple schedules, picks best schedule based on fitness.
The particular implementation is on scheduling courses for students, could be adapted for GA\TAs. Also written in python.
Very helpful video could be used during implementation.

Data class that contains and initializes the data. For us we would pull from DB.

Population class that represents a population of schedules.

Genetic algorithm class that evolves population from 1 generation to the next using crossover mutation and elitism.

Course class represents a course to be a schedule.

Instructor class represents instructors.

Room class - Not applicable.

MeetingTime class could be useful for different schedules.

Department class - Not applicable since only comp sci department.

Class class representing a course with a specific department that is scheduled to be taught by a specific instructor at a specific time in a specific Room

Schedule Class represents each schedule.

https://prototypeprj.blogspot.com/2020/07/class-scheduling-w-genetic-algorithms.html
This link contains a bunch of screen shots of the algorithm class that generates the schedules.

Required libraries: PrettyTable, Random.